# การใช้ฟังก์ชั่น print() ที่ซับซ้อนขึ้น
# เราสามารถกำหนดลักษณะการแสดงผลเพิ่มเติมให้กับฟังก์ชั่น print()
# print(ข้อมูล1, ข้อมูล2, ข้อมูล3, ...., sep = '')
# print(ข้อมูล1, ข้อมูล2, ข้อมูล3, ...., end = '')
# print(ข้อมูล1, ข้อมูล2, ข้อมูล3, ...., sep = '', end='')
# sep และ end เป็นการระบุชื่อข้อมูลที่จะกำหนดให้กับฟังก์ชั่น
# sep คือสิ่งที่จะคั่นระหว่างข้อมูลแต่ล่ะอัน โดยค่าที่จะกำหนดให้แก่ sep ต้องอยู่ในรูปแบบของสตริงเท่านั้น
# (ครอบด้วย "" หรือ '' หรือเป็นตัวแปรที่เก็บข้อมูลชนิดสตริงเอาไว้) ตามปกติถ้าไม่ระบุจะเป็นช่องว่าง 1 ช่อง
# end คือสิ่งที่จะเขียนต่อท้ายสตริง และต้องกำหนดในแบบสตริงเช่นเดียวกับ sep โดยตามปกติ (ถ้าไม่ระบุ) จะเป็น '\n'
# ซึ้งเป็นสัญลักษณ์สำหรับการขึ้นบรรทัดใหม่
# ทั้ง sep และ end จะกำหนดเพียงอย่างไดอย่างหนึ่งหรือทั้งคู่ หรือไม่มีเลยก็ได้
a = 'One'
b = 'Two'
c = 'Three'
d = 'Four'
print(a, b, c, d, sep=',') # sep คือสิ่งที่จะคั่นระหว่างข้อมูลแต่ล่ะอัน โดยค่าที่จะกำหนดให้แก่ sep ต้องอยู่ในรูปแบบของสตริงเท่านั้น

a = 'www'
b = 'developerthai'
c = 'com'
print(a, b, c, sep='.') # sep คือสิ่งที่จะคั่นระหว่างข้อมูลแต่ล่ะอัน โดยค่าที่จะกำหนดให้แก่ sep ต้องอยู่ในรูปแบบของสตริงเท่านั้น

d = 12
m = 2
y = 2562
print('วันนี้ตรงกับ: ',end='') # end คือสิ่งที่จะเขียนต่อท้ายสตริง และต้องกำหนดในแบบสตริงเช่นเดียวกับ sep โดยตามปกติ (ถ้าไม่ระบุ) จะขึ้นบรรทัดใหม่ '\n'
print(d, m, y, sep='/') # เอา print มาต่อกัน โดยมีคำสั่ง end ไม่ให้ขึ้นบรรทัดใหม่